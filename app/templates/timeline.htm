{% extends "base.htm" %}
{% block title %}Time line of Sensors{% endblock %}

{% block content %}
	<!-- bar chart canvas element -->
	<div class="container">
		<h2>Sensor's timeline</h2>
		{% for sensor in sensors%}
		<button type="button" class="btn btn-primary active" data-toggle="buttons" aria-pressed="true" id='{{sensor}}'>Sensor {{sensor}}</button>
		{% endfor %}
		<button type="button" class="btn btn-danger">Resend</button>
		<div id="control">
			<div class="dropdown">
			  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown" style="height:35px;width:200px">Select View
			  <span class="caret"></span></button>
			  <ul class="dropdown-menu">
				{%for view in views%}
				<li class="option"><a href="#">{{view}}</a></li>
				{% endfor %}
			  </ul>
			</div>	
			<div class="form-group">
			  <input type="text" class="form-control" id="usr" style="height:35px;width:200px" placeholder="Number of sample">
			</div>
		</div>
	</div>
	<canvas id="line-chart" width="800" height="600"></canvas>
{% endblock %}

{% block scripts %}
{{super()}}
<script src="{{ url_for('static', filename='Chart.min.js') }}"></script>
<script>
var chartObject;
//Chart.defaults.global.responsive = false;
$(".btn-primary").click(function(){
	var selected = $(".dropdown-toggle").text();
	var query = $(".form-control").val();
	$.getJSON({
		url: "/api/sensor/timeline/" + $(this).attr("id") + '/' + selected + "?query=" + query,
		dataType: "json",
		success: function(data){
			console.log(chartObject);
			if (chartObject != null){
				chartObject.destroy();
			}
			chartObject = createChart(data);
		}
	});
	
	$(".btn.btn-primary").each(function() {
		if ($(this).prop("disabled") == true){
			$(this).attr("disabled", false);
		}
	})
	$(this).attr("disabled", true);
});

$(".btn-danger").click(function(){
	var sensorId;
	$(".btn.btn-primary").each(function() {
		if ($(this).prop("disabled") == true){
			sensorId = $(this).attr("id")
		}
	})
	var selected = $(".dropdown-toggle").text();
	var query = $(".form-control").val();
	$.getJSON({
		url: "/api/sensor/timeline/" + sensorId + '/' + selected + "?query=" + query,
		dataType: "json",
		success: function(data){
			console.log(chartObject);
			if (chartObject != null){
				chartObject.destroy();
			}
			chartObject = createChart(data);
		}
	});
	
	});

$(".dropdown ul li.option").click(function(){
	$(".dropdown-toggle").text($(this).find("a").text());
	console.log($(".btn.btn-primary.active"));
	$(".btn.btn-primary").each(function() {
		if ($(this).prop("disabled") == true){
			$(this).attr("disabled", false);
		}
	})
});

function createChart(data, chartObj) {
		// define the chart data
		labels = [];
		plots = [];
		points=data["data"];
		var date; 
		for (i = 0; i < points.length; i++){
			date = new Date(points[i]["time"]);
			labels.push(date.toString().substring(15, 25));
			plots.push(points[i]["data"]);
		}
		chartObj = new Chart(document.getElementById("line-chart"), {
		  type: 'line',
		  data: {
			labels: labels,
			datasets: [{ 
				data: plots,
				label: "Data " + data["view"] + " from sensor " + data["sensor"],
				borderColor: "#3e95cd",
				fill: false
			  }
			]
		  },
		  options: {
			//responsive: false,
			//events: ['click'],
			legend: {
				display: false
			},
			title: {
				display: true,
				text: data["view"].toUpperCase() + " from SENSOR " + data["sensor"],
				fontSize: 20
			}
		  }
		});
		return chartObj;
}
</script>
{% endblock %}
